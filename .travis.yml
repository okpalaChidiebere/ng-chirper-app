language: bash
os:
  - linux
dist: trusty

services:
  - docker

# Only clone the most recent commit
git:
  depth: 1

notifications:
  email: false

env:
  global:
    - DOCKER_USERNAME="aluminetchidiebre"
    - SERVICE_NAME="ng-chirper-app"
    - NGINX_TAG=1.23.4 # documentation: https://hub.docker.com/_/nginx

# these jobs will be queued up by id. eg 12.1, 12.2 etc
stages:
  - name: test
    # run tests only when a commit is pushed remotely on whatever branch
    if: type = push
  - name: deploy
    # CONDITION: we want to build only want the github event not a PR (is a commit) AND the branchName is master or staging or the branchName end with -ci
    if: type = push AND (branch IN (master, staging) OR branch =~ /-ci/)

before_install:
  - docker pull nginx:"$NGINX_TAG"-alpine
  - docker images

# Skip any install step. Don't `go get` dependencies
install: echo "Skip global installing..."

before_script:
  - if [ $TRAVIS_BRANCH == "master" ]; then
    ENVIRONMENT=prod;
    elif [ $TRAVIS_BRANCH == "staging" ]; then
    ENVIRONMENT=dev;
    else
    ENVIRONMENT=dev;
    fi

jobs:
  include:
    - stage: test
      name: "Unit Tests and Lint Tests"
      script:
        # lint the nginx conf file
        # we mount a single file to a single file and test that file in nginx. If we had more files in our nginx like SSL, mime types, etc we will mount them as well but we don't
        - docker run --rm -t -a stdout --name check-nginx-conf --volume "$(pwd)/nginx.conf:/etc/nginx/nginx.conf:ro" nginx:"$NGINX_TAG"-alpine nginx -c /etc/nginx/nginx.conf -t | grep "test is successful" | wc -l
        - echo "No angular tests to run..."
    - stage: deploy
      name: "Build and push image to registry"
      script:
        - docker --version
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t "$DOCKER_USERNAME"/"$SERVICE_NAME":"$ENVIRONMENT" -t "$DOCKER_USERNAME"/"$SERVICE_NAME":"$ENVIRONMENT"."$TRAVIS_BUILD_ID" --build-arg ENVIRONMENT=$ENVIRONMENT .
        - docker images
        - docker push "$DOCKER_USERNAME"/"$SERVICE_NAME":"$ENVIRONMENT"."$TRAVIS_BUILD_ID"
        - docker push "$DOCKER_USERNAME"/"$SERVICE_NAME":"$ENVIRONMENT"

notifications:
  email:
    recipients:
      - okpalacollins4@gmail.com
    on_success: never
    on_failure: always